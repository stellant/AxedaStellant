//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace Medrad.ServiceEngineering.ApplicationFramework.Axeda.Agent.AgentWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service", Namespace="http://axeda.com/agent/api")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDataitemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataitemOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateAlarmOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeviceIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FileUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShutdownOperationCompleted;
        
        private System.Threading.SendOrPostCallback InternetConnectOperationCompleted;
        
        private System.Threading.SendOrPostCallback InternetDisconnectOperationCompleted;
        
        private System.Threading.SendOrPostCallback FileTransferControlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPackageManagementStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPackageStatusListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPulledPackageStatusListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSMControllerConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetSMControllerConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPackageInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckNewPackagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadPackagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecutePackagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPackageStatusUpdatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemovePackageStatusesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetVersionCompletedEventHandler GetVersionCompleted;
        
        /// <remarks/>
        public event SetDataitemCompletedEventHandler SetDataitemCompleted;
        
        /// <remarks/>
        public event GetDataitemCompletedEventHandler GetDataitemCompleted;
        
        /// <remarks/>
        public event CreateAlarmCompletedEventHandler CreateAlarmCompleted;
        
        /// <remarks/>
        public event CreateEventCompletedEventHandler CreateEventCompleted;
        
        /// <remarks/>
        public event GetDeviceIdsCompletedEventHandler GetDeviceIdsCompleted;
        
        /// <remarks/>
        public event FileUploadCompletedEventHandler FileUploadCompleted;
        
        /// <remarks/>
        public event ShutdownCompletedEventHandler ShutdownCompleted;
        
        /// <remarks/>
        public event InternetConnectCompletedEventHandler InternetConnectCompleted;
        
        /// <remarks/>
        public event InternetDisconnectCompletedEventHandler InternetDisconnectCompleted;
        
        /// <remarks/>
        public event FileTransferControlCompletedEventHandler FileTransferControlCompleted;
        
        /// <remarks/>
        public event GetPackageManagementStateCompletedEventHandler GetPackageManagementStateCompleted;
        
        /// <remarks/>
        public event GetPackageStatusListCompletedEventHandler GetPackageStatusListCompleted;
        
        /// <remarks/>
        public event GetPulledPackageStatusListCompletedEventHandler GetPulledPackageStatusListCompleted;
        
        /// <remarks/>
        public event GetSMControllerConfigCompletedEventHandler GetSMControllerConfigCompleted;
        
        /// <remarks/>
        public event SetSMControllerConfigCompletedEventHandler SetSMControllerConfigCompleted;
        
        /// <remarks/>
        public event GetPackageInfoCompletedEventHandler GetPackageInfoCompleted;
        
        /// <remarks/>
        public event CheckNewPackagesCompletedEventHandler CheckNewPackagesCompleted;
        
        /// <remarks/>
        public event DownloadPackagesCompletedEventHandler DownloadPackagesCompleted;
        
        /// <remarks/>
        public event ExecutePackagesCompletedEventHandler ExecutePackagesCompleted;
        
        /// <remarks/>
        public event GetPackageStatusUpdatesCompletedEventHandler GetPackageStatusUpdatesCompleted;
        
        /// <remarks/>
        public event RemovePackageStatusesCompletedEventHandler RemovePackageStatusesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GetVersion", RequestNamespace="http://axeda.com/agent/api/type", ResponseNamespace="http://axeda.com/agent/api/type", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("version")]
        public string GetVersion() {
            object[] results = this.Invoke("GetVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVersionAsync() {
            this.GetVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetVersionAsync(object userState) {
            if ((this.GetVersionOperationCompleted == null)) {
                this.GetVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionOperationCompleted);
            }
            this.InvokeAsync("GetVersion", new object[0], this.GetVersionOperationCompleted, userState);
        }
        
        private void OnGetVersionOperationCompleted(object arg) {
            if ((this.GetVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionCompleted(this, new GetVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SetDataitem", RequestNamespace="http://axeda.com/agent/api/type", ResponseNamespace="http://axeda.com/agent/api/type", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetDataitem(DataitemValue newvalue, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DeviceIdentification device) {
            this.Invoke("SetDataitem", new object[] {
                        newvalue,
                        device});
        }
        
        /// <remarks/>
        public void SetDataitemAsync(DataitemValue newvalue, DeviceIdentification device) {
            this.SetDataitemAsync(newvalue, device, null);
        }
        
        /// <remarks/>
        public void SetDataitemAsync(DataitemValue newvalue, DeviceIdentification device, object userState) {
            if ((this.SetDataitemOperationCompleted == null)) {
                this.SetDataitemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDataitemOperationCompleted);
            }
            this.InvokeAsync("SetDataitem", new object[] {
                        newvalue,
                        device}, this.SetDataitemOperationCompleted, userState);
        }
        
        private void OnSetDataitemOperationCompleted(object arg) {
            if ((this.SetDataitemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDataitemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GetDataitem", RequestNamespace="http://axeda.com/agent/api/type", ResponseNamespace="http://axeda.com/agent/api/type", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public DataitemValue GetDataitem(string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DeviceIdentification device) {
            object[] results = this.Invoke("GetDataitem", new object[] {
                        name,
                        device});
            return ((DataitemValue)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataitemAsync(string name, DeviceIdentification device) {
            this.GetDataitemAsync(name, device, null);
        }
        
        /// <remarks/>
        public void GetDataitemAsync(string name, DeviceIdentification device, object userState) {
            if ((this.GetDataitemOperationCompleted == null)) {
                this.GetDataitemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataitemOperationCompleted);
            }
            this.InvokeAsync("GetDataitem", new object[] {
                        name,
                        device}, this.GetDataitemOperationCompleted, userState);
        }
        
        private void OnGetDataitemOperationCompleted(object arg) {
            if ((this.GetDataitemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataitemCompleted(this, new GetDataitemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("CreateAlarm", RequestNamespace="http://axeda.com/agent/api/type", ResponseNamespace="http://axeda.com/agent/api/type", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateAlarm(Alarm alarm, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DeviceIdentification device) {
            this.Invoke("CreateAlarm", new object[] {
                        alarm,
                        device});
        }
        
        /// <remarks/>
        public void CreateAlarmAsync(Alarm alarm, DeviceIdentification device) {
            this.CreateAlarmAsync(alarm, device, null);
        }
        
        /// <remarks/>
        public void CreateAlarmAsync(Alarm alarm, DeviceIdentification device, object userState) {
            if ((this.CreateAlarmOperationCompleted == null)) {
                this.CreateAlarmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAlarmOperationCompleted);
            }
            this.InvokeAsync("CreateAlarm", new object[] {
                        alarm,
                        device}, this.CreateAlarmOperationCompleted, userState);
        }
        
        private void OnCreateAlarmOperationCompleted(object arg) {
            if ((this.CreateAlarmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAlarmCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("CreateEvent", RequestNamespace="http://axeda.com/agent/api/type", ResponseNamespace="http://axeda.com/agent/api/type", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateEvent(Event @event, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DeviceIdentification device) {
            this.Invoke("CreateEvent", new object[] {
                        @event,
                        device});
        }
        
        /// <remarks/>
        public void CreateEventAsync(Event @event, DeviceIdentification device) {
            this.CreateEventAsync(@event, device, null);
        }
        
        /// <remarks/>
        public void CreateEventAsync(Event @event, DeviceIdentification device, object userState) {
            if ((this.CreateEventOperationCompleted == null)) {
                this.CreateEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateEventOperationCompleted);
            }
            this.InvokeAsync("CreateEvent", new object[] {
                        @event,
                        device}, this.CreateEventOperationCompleted, userState);
        }
        
        private void OnCreateEventOperationCompleted(object arg) {
            if ((this.CreateEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateEventCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GetDeviceIds", RequestNamespace="http://axeda.com/agent/api/type", ResponseNamespace="http://axeda.com/agent/api/type", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("device", IsNullable=false)]
        public DeviceIdentification[] GetDeviceIds() {
            object[] results = this.Invoke("GetDeviceIds", new object[0]);
            return ((DeviceIdentification[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDeviceIdsAsync() {
            this.GetDeviceIdsAsync(null);
        }
        
        /// <remarks/>
        public void GetDeviceIdsAsync(object userState) {
            if ((this.GetDeviceIdsOperationCompleted == null)) {
                this.GetDeviceIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeviceIdsOperationCompleted);
            }
            this.InvokeAsync("GetDeviceIds", new object[0], this.GetDeviceIdsOperationCompleted, userState);
        }
        
        private void OnGetDeviceIdsOperationCompleted(object arg) {
            if ((this.GetDeviceIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeviceIdsCompleted(this, new GetDeviceIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("FileUpload", RequestNamespace="http://axeda.com/agent/api/type", ResponseNamespace="http://axeda.com/agent/api/type", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FileUpload(File file, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DeviceIdentification device) {
            this.Invoke("FileUpload", new object[] {
                        file,
                        device});
        }
        
        /// <remarks/>
        public void FileUploadAsync(File file, DeviceIdentification device) {
            this.FileUploadAsync(file, device, null);
        }
        
        /// <remarks/>
        public void FileUploadAsync(File file, DeviceIdentification device, object userState) {
            if ((this.FileUploadOperationCompleted == null)) {
                this.FileUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFileUploadOperationCompleted);
            }
            this.InvokeAsync("FileUpload", new object[] {
                        file,
                        device}, this.FileUploadOperationCompleted, userState);
        }
        
        private void OnFileUploadOperationCompleted(object arg) {
            if ((this.FileUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FileUploadCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Shutdown", RequestNamespace="http://axeda.com/agent/api/type", ResponseNamespace="http://axeda.com/agent/api/type", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Shutdown(ShutdownMode mode) {
            this.Invoke("Shutdown", new object[] {
                        mode});
        }
        
        /// <remarks/>
        public void ShutdownAsync(ShutdownMode mode) {
            this.ShutdownAsync(mode, null);
        }
        
        /// <remarks/>
        public void ShutdownAsync(ShutdownMode mode, object userState) {
            if ((this.ShutdownOperationCompleted == null)) {
                this.ShutdownOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShutdownOperationCompleted);
            }
            this.InvokeAsync("Shutdown", new object[] {
                        mode}, this.ShutdownOperationCompleted, userState);
        }
        
        private void OnShutdownOperationCompleted(object arg) {
            if ((this.ShutdownCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShutdownCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("InternetConnect", RequestNamespace="http://axeda.com/agent/api/type", ResponseNamespace="http://axeda.com/agent/api/type", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InternetConnect() {
            this.Invoke("InternetConnect", new object[0]);
        }
        
        /// <remarks/>
        public void InternetConnectAsync() {
            this.InternetConnectAsync(null);
        }
        
        /// <remarks/>
        public void InternetConnectAsync(object userState) {
            if ((this.InternetConnectOperationCompleted == null)) {
                this.InternetConnectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInternetConnectOperationCompleted);
            }
            this.InvokeAsync("InternetConnect", new object[0], this.InternetConnectOperationCompleted, userState);
        }
        
        private void OnInternetConnectOperationCompleted(object arg) {
            if ((this.InternetConnectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InternetConnectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("InternetDisconnect", RequestNamespace="http://axeda.com/agent/api/type", ResponseNamespace="http://axeda.com/agent/api/type", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InternetDisconnect(int fileTransferTimeout) {
            this.Invoke("InternetDisconnect", new object[] {
                        fileTransferTimeout});
        }
        
        /// <remarks/>
        public void InternetDisconnectAsync(int fileTransferTimeout) {
            this.InternetDisconnectAsync(fileTransferTimeout, null);
        }
        
        /// <remarks/>
        public void InternetDisconnectAsync(int fileTransferTimeout, object userState) {
            if ((this.InternetDisconnectOperationCompleted == null)) {
                this.InternetDisconnectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInternetDisconnectOperationCompleted);
            }
            this.InvokeAsync("InternetDisconnect", new object[] {
                        fileTransferTimeout}, this.InternetDisconnectOperationCompleted, userState);
        }
        
        private void OnInternetDisconnectOperationCompleted(object arg) {
            if ((this.InternetDisconnectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InternetDisconnectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("FileTransferControl", RequestNamespace="http://axeda.com/agent/api/type", ResponseNamespace="http://axeda.com/agent/api/type", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FileTransferControl(TransferCommand transferCommand, int timeout) {
            this.Invoke("FileTransferControl", new object[] {
                        transferCommand,
                        timeout});
        }
        
        /// <remarks/>
        public void FileTransferControlAsync(TransferCommand transferCommand, int timeout) {
            this.FileTransferControlAsync(transferCommand, timeout, null);
        }
        
        /// <remarks/>
        public void FileTransferControlAsync(TransferCommand transferCommand, int timeout, object userState) {
            if ((this.FileTransferControlOperationCompleted == null)) {
                this.FileTransferControlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFileTransferControlOperationCompleted);
            }
            this.InvokeAsync("FileTransferControl", new object[] {
                        transferCommand,
                        timeout}, this.FileTransferControlOperationCompleted, userState);
        }
        
        private void OnFileTransferControlOperationCompleted(object arg) {
            if ((this.FileTransferControlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FileTransferControlCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GetPackageManagementState", RequestNamespace="http://axeda.com/agent/api/type", ResponseNamespace="http://axeda.com/agent/api/type", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public PackageState GetPackageManagementState() {
            object[] results = this.Invoke("GetPackageManagementState", new object[0]);
            return ((PackageState)(results[0]));
        }
        
        /// <remarks/>
        public void GetPackageManagementStateAsync() {
            this.GetPackageManagementStateAsync(null);
        }
        
        /// <remarks/>
        public void GetPackageManagementStateAsync(object userState) {
            if ((this.GetPackageManagementStateOperationCompleted == null)) {
                this.GetPackageManagementStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPackageManagementStateOperationCompleted);
            }
            this.InvokeAsync("GetPackageManagementState", new object[0], this.GetPackageManagementStateOperationCompleted, userState);
        }
        
        private void OnGetPackageManagementStateOperationCompleted(object arg) {
            if ((this.GetPackageManagementStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPackageManagementStateCompleted(this, new GetPackageManagementStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GetPackageStatusList", RequestNamespace="http://axeda.com/agent/api/type", ResponseNamespace="http://axeda.com/agent/api/type", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public PackageStatus[] GetPackageStatusList() {
            object[] results = this.Invoke("GetPackageStatusList", new object[0]);
            return ((PackageStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPackageStatusListAsync() {
            this.GetPackageStatusListAsync(null);
        }
        
        /// <remarks/>
        public void GetPackageStatusListAsync(object userState) {
            if ((this.GetPackageStatusListOperationCompleted == null)) {
                this.GetPackageStatusListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPackageStatusListOperationCompleted);
            }
            this.InvokeAsync("GetPackageStatusList", new object[0], this.GetPackageStatusListOperationCompleted, userState);
        }
        
        private void OnGetPackageStatusListOperationCompleted(object arg) {
            if ((this.GetPackageStatusListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPackageStatusListCompleted(this, new GetPackageStatusListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GetPulledPackageStatusList", RequestNamespace="http://axeda.com/agent/api/type", ResponseNamespace="http://axeda.com/agent/api/type", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public PackageStatus[] GetPulledPackageStatusList() {
            object[] results = this.Invoke("GetPulledPackageStatusList", new object[0]);
            return ((PackageStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPulledPackageStatusListAsync() {
            this.GetPulledPackageStatusListAsync(null);
        }
        
        /// <remarks/>
        public void GetPulledPackageStatusListAsync(object userState) {
            if ((this.GetPulledPackageStatusListOperationCompleted == null)) {
                this.GetPulledPackageStatusListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPulledPackageStatusListOperationCompleted);
            }
            this.InvokeAsync("GetPulledPackageStatusList", new object[0], this.GetPulledPackageStatusListOperationCompleted, userState);
        }
        
        private void OnGetPulledPackageStatusListOperationCompleted(object arg) {
            if ((this.GetPulledPackageStatusListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPulledPackageStatusListCompleted(this, new GetPulledPackageStatusListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GetSMControllerConfig", RequestNamespace="http://axeda.com/agent/api/type", ResponseNamespace="http://axeda.com/agent/api/type", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("SMControllerConfig")]
        public SMControllerConfig GetSMControllerConfig() {
            object[] results = this.Invoke("GetSMControllerConfig", new object[0]);
            return ((SMControllerConfig)(results[0]));
        }
        
        /// <remarks/>
        public void GetSMControllerConfigAsync() {
            this.GetSMControllerConfigAsync(null);
        }
        
        /// <remarks/>
        public void GetSMControllerConfigAsync(object userState) {
            if ((this.GetSMControllerConfigOperationCompleted == null)) {
                this.GetSMControllerConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSMControllerConfigOperationCompleted);
            }
            this.InvokeAsync("GetSMControllerConfig", new object[0], this.GetSMControllerConfigOperationCompleted, userState);
        }
        
        private void OnGetSMControllerConfigOperationCompleted(object arg) {
            if ((this.GetSMControllerConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSMControllerConfigCompleted(this, new GetSMControllerConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SetSMControllerConfig", RequestNamespace="http://axeda.com/agent/api/type", ResponseNamespace="http://axeda.com/agent/api/type", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetSMControllerConfig(SMControllerConfig SMControllerConfig) {
            this.Invoke("SetSMControllerConfig", new object[] {
                        SMControllerConfig});
        }
        
        /// <remarks/>
        public void SetSMControllerConfigAsync(SMControllerConfig SMControllerConfig) {
            this.SetSMControllerConfigAsync(SMControllerConfig, null);
        }
        
        /// <remarks/>
        public void SetSMControllerConfigAsync(SMControllerConfig SMControllerConfig, object userState) {
            if ((this.SetSMControllerConfigOperationCompleted == null)) {
                this.SetSMControllerConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetSMControllerConfigOperationCompleted);
            }
            this.InvokeAsync("SetSMControllerConfig", new object[] {
                        SMControllerConfig}, this.SetSMControllerConfigOperationCompleted, userState);
        }
        
        private void OnSetSMControllerConfigOperationCompleted(object arg) {
            if ((this.SetSMControllerConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetSMControllerConfigCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GetPackageInfo", RequestNamespace="http://axeda.com/agent/api/type", ResponseNamespace="http://axeda.com/agent/api/type", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public PackageInfo GetPackageInfo(string packageId) {
            object[] results = this.Invoke("GetPackageInfo", new object[] {
                        packageId});
            return ((PackageInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetPackageInfoAsync(string packageId) {
            this.GetPackageInfoAsync(packageId, null);
        }
        
        /// <remarks/>
        public void GetPackageInfoAsync(string packageId, object userState) {
            if ((this.GetPackageInfoOperationCompleted == null)) {
                this.GetPackageInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPackageInfoOperationCompleted);
            }
            this.InvokeAsync("GetPackageInfo", new object[] {
                        packageId}, this.GetPackageInfoOperationCompleted, userState);
        }
        
        private void OnGetPackageInfoOperationCompleted(object arg) {
            if ((this.GetPackageInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPackageInfoCompleted(this, new GetPackageInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("CheckNewPackages", RequestNamespace="http://axeda.com/agent/api/type", ResponseNamespace="http://axeda.com/agent/api/type", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public bool CheckNewPackages(bool queryServer, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DeviceIdentification device) {
            object[] results = this.Invoke("CheckNewPackages", new object[] {
                        queryServer,
                        device});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckNewPackagesAsync(bool queryServer, DeviceIdentification device) {
            this.CheckNewPackagesAsync(queryServer, device, null);
        }
        
        /// <remarks/>
        public void CheckNewPackagesAsync(bool queryServer, DeviceIdentification device, object userState) {
            if ((this.CheckNewPackagesOperationCompleted == null)) {
                this.CheckNewPackagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckNewPackagesOperationCompleted);
            }
            this.InvokeAsync("CheckNewPackages", new object[] {
                        queryServer,
                        device}, this.CheckNewPackagesOperationCompleted, userState);
        }
        
        private void OnCheckNewPackagesOperationCompleted(object arg) {
            if ((this.CheckNewPackagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckNewPackagesCompleted(this, new CheckNewPackagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("DownloadPackages", RequestNamespace="http://axeda.com/agent/api/type", ResponseNamespace="http://axeda.com/agent/api/type", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DownloadPackages([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DeviceIdentification device, [System.Xml.Serialization.XmlArrayItemAttribute("id", IsNullable=false)] string[] packages) {
            this.Invoke("DownloadPackages", new object[] {
                        device,
                        packages});
        }
        
        /// <remarks/>
        public void DownloadPackagesAsync(DeviceIdentification device, string[] packages) {
            this.DownloadPackagesAsync(device, packages, null);
        }
        
        /// <remarks/>
        public void DownloadPackagesAsync(DeviceIdentification device, string[] packages, object userState) {
            if ((this.DownloadPackagesOperationCompleted == null)) {
                this.DownloadPackagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadPackagesOperationCompleted);
            }
            this.InvokeAsync("DownloadPackages", new object[] {
                        device,
                        packages}, this.DownloadPackagesOperationCompleted, userState);
        }
        
        private void OnDownloadPackagesOperationCompleted(object arg) {
            if ((this.DownloadPackagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadPackagesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ExecutePackages", RequestNamespace="http://axeda.com/agent/api/type", ResponseNamespace="http://axeda.com/agent/api/type", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ExecutePackages([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DeviceIdentification device, [System.Xml.Serialization.XmlArrayItemAttribute("id", IsNullable=false)] string[] packages) {
            this.Invoke("ExecutePackages", new object[] {
                        device,
                        packages});
        }
        
        /// <remarks/>
        public void ExecutePackagesAsync(DeviceIdentification device, string[] packages) {
            this.ExecutePackagesAsync(device, packages, null);
        }
        
        /// <remarks/>
        public void ExecutePackagesAsync(DeviceIdentification device, string[] packages, object userState) {
            if ((this.ExecutePackagesOperationCompleted == null)) {
                this.ExecutePackagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecutePackagesOperationCompleted);
            }
            this.InvokeAsync("ExecutePackages", new object[] {
                        device,
                        packages}, this.ExecutePackagesOperationCompleted, userState);
        }
        
        private void OnExecutePackagesOperationCompleted(object arg) {
            if ((this.ExecutePackagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecutePackagesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GetPackageStatusUpdates", RequestNamespace="http://axeda.com/agent/api/type", ResponseNamespace="http://axeda.com/agent/api/type", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("result")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public PackageStatus[] GetPackageStatusUpdates([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> timeout, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool timeoutSpecified) {
            object[] results = this.Invoke("GetPackageStatusUpdates", new object[] {
                        timeout,
                        timeoutSpecified});
            return ((PackageStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPackageStatusUpdatesAsync(System.Nullable<int> timeout, bool timeoutSpecified) {
            this.GetPackageStatusUpdatesAsync(timeout, timeoutSpecified, null);
        }
        
        /// <remarks/>
        public void GetPackageStatusUpdatesAsync(System.Nullable<int> timeout, bool timeoutSpecified, object userState) {
            if ((this.GetPackageStatusUpdatesOperationCompleted == null)) {
                this.GetPackageStatusUpdatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPackageStatusUpdatesOperationCompleted);
            }
            this.InvokeAsync("GetPackageStatusUpdates", new object[] {
                        timeout,
                        timeoutSpecified}, this.GetPackageStatusUpdatesOperationCompleted, userState);
        }
        
        private void OnGetPackageStatusUpdatesOperationCompleted(object arg) {
            if ((this.GetPackageStatusUpdatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPackageStatusUpdatesCompleted(this, new GetPackageStatusUpdatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("RemovePackageStatuses", RequestNamespace="http://axeda.com/agent/api/type", ResponseNamespace="http://axeda.com/agent/api/type", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemovePackageStatuses([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DeviceIdentification device, [System.Xml.Serialization.XmlArrayItemAttribute("id", IsNullable=false)] string[] packages) {
            this.Invoke("RemovePackageStatuses", new object[] {
                        device,
                        packages});
        }
        
        /// <remarks/>
        public void RemovePackageStatusesAsync(DeviceIdentification device, string[] packages) {
            this.RemovePackageStatusesAsync(device, packages, null);
        }
        
        /// <remarks/>
        public void RemovePackageStatusesAsync(DeviceIdentification device, string[] packages, object userState) {
            if ((this.RemovePackageStatusesOperationCompleted == null)) {
                this.RemovePackageStatusesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemovePackageStatusesOperationCompleted);
            }
            this.InvokeAsync("RemovePackageStatuses", new object[] {
                        device,
                        packages}, this.RemovePackageStatusesOperationCompleted, userState);
        }
        
        private void OnRemovePackageStatusesOperationCompleted(object arg) {
            if ((this.RemovePackageStatusesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemovePackageStatusesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axeda.com/agent/api/type")]
    public partial class DataitemValue {
        
        private string nameField;
        
        private string valueField;
        
        private Quality qualityField;
        
        private ValueType typeField;
        
        private System.DateTime timestampField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public Quality quality {
            get {
                return this.qualityField;
            }
            set {
                this.qualityField = value;
            }
        }
        
        /// <remarks/>
        public ValueType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axeda.com/agent/api/type")]
    public enum Quality {
        
        /// <remarks/>
        Good,
        
        /// <remarks/>
        Bad,
        
        /// <remarks/>
        Uncertain,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axeda.com/agent/api/type")]
    public enum ValueType {
        
        /// <remarks/>
        Analog,
        
        /// <remarks/>
        Digital,
        
        /// <remarks/>
        String,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axeda.com/agent/api/type")]
    public partial class PackageInfo {
        
        private string idField;
        
        private string nameField;
        
        private string versionField;
        
        private string descriptionField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axeda.com/agent/api/type")]
    public partial class DayOfWeekInMonth {
        
        private int weekOfMonthField;
        
        private bool weekOfMonthFieldSpecified;
        
        private int dayOfWeekField;
        
        private bool dayOfWeekFieldSpecified;
        
        /// <remarks/>
        public int weekOfMonth {
            get {
                return this.weekOfMonthField;
            }
            set {
                this.weekOfMonthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool weekOfMonthSpecified {
            get {
                return this.weekOfMonthFieldSpecified;
            }
            set {
                this.weekOfMonthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int dayOfWeek {
            get {
                return this.dayOfWeekField;
            }
            set {
                this.dayOfWeekField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dayOfWeekSpecified {
            get {
                return this.dayOfWeekFieldSpecified;
            }
            set {
                this.dayOfWeekFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Yearly))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axeda.com/agent/api/type")]
    public partial class Monthly {
        
        private int dayOfMonthField;
        
        private bool dayOfMonthFieldSpecified;
        
        private DayOfWeekInMonth dayOfWeekInMonthField;
        
        /// <remarks/>
        public int dayOfMonth {
            get {
                return this.dayOfMonthField;
            }
            set {
                this.dayOfMonthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dayOfMonthSpecified {
            get {
                return this.dayOfMonthFieldSpecified;
            }
            set {
                this.dayOfMonthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public DayOfWeekInMonth DayOfWeekInMonth {
            get {
                return this.dayOfWeekInMonthField;
            }
            set {
                this.dayOfWeekInMonthField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axeda.com/agent/api/type")]
    public partial class Yearly : Monthly {
        
        private int monthField;
        
        private bool monthFieldSpecified;
        
        /// <remarks/>
        public int month {
            get {
                return this.monthField;
            }
            set {
                this.monthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool monthSpecified {
            get {
                return this.monthFieldSpecified;
            }
            set {
                this.monthFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axeda.com/agent/api/type")]
    public partial class Weekly {
        
        private bool sundayField;
        
        private bool sundayFieldSpecified;
        
        private bool mondayField;
        
        private bool mondayFieldSpecified;
        
        private bool tuesdayField;
        
        private bool tuesdayFieldSpecified;
        
        private bool wednesdayField;
        
        private bool wednesdayFieldSpecified;
        
        private bool thursdayField;
        
        private bool thursdayFieldSpecified;
        
        private bool fridayField;
        
        private bool fridayFieldSpecified;
        
        private bool saturdayField;
        
        private bool saturdayFieldSpecified;
        
        /// <remarks/>
        public bool sunday {
            get {
                return this.sundayField;
            }
            set {
                this.sundayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sundaySpecified {
            get {
                return this.sundayFieldSpecified;
            }
            set {
                this.sundayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool monday {
            get {
                return this.mondayField;
            }
            set {
                this.mondayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mondaySpecified {
            get {
                return this.mondayFieldSpecified;
            }
            set {
                this.mondayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool tuesday {
            get {
                return this.tuesdayField;
            }
            set {
                this.tuesdayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tuesdaySpecified {
            get {
                return this.tuesdayFieldSpecified;
            }
            set {
                this.tuesdayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool wednesday {
            get {
                return this.wednesdayField;
            }
            set {
                this.wednesdayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool wednesdaySpecified {
            get {
                return this.wednesdayFieldSpecified;
            }
            set {
                this.wednesdayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool thursday {
            get {
                return this.thursdayField;
            }
            set {
                this.thursdayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool thursdaySpecified {
            get {
                return this.thursdayFieldSpecified;
            }
            set {
                this.thursdayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool friday {
            get {
                return this.fridayField;
            }
            set {
                this.fridayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fridaySpecified {
            get {
                return this.fridayFieldSpecified;
            }
            set {
                this.fridayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool saturday {
            get {
                return this.saturdayField;
            }
            set {
                this.saturdayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool saturdaySpecified {
            get {
                return this.saturdayFieldSpecified;
            }
            set {
                this.saturdayFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axeda.com/agent/api/type")]
    public partial class Daily {
        
        private bool weekDaysField;
        
        private bool weekDaysFieldSpecified;
        
        /// <remarks/>
        public bool weekDays {
            get {
                return this.weekDaysField;
            }
            set {
                this.weekDaysField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool weekDaysSpecified {
            get {
                return this.weekDaysFieldSpecified;
            }
            set {
                this.weekDaysFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axeda.com/agent/api/type")]
    public partial class TimeOfDay {
        
        private int hourField;
        
        private bool hourFieldSpecified;
        
        private int minuteField;
        
        private bool minuteFieldSpecified;
        
        private int secondField;
        
        private bool secondFieldSpecified;
        
        /// <remarks/>
        public int hour {
            get {
                return this.hourField;
            }
            set {
                this.hourField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hourSpecified {
            get {
                return this.hourFieldSpecified;
            }
            set {
                this.hourFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int minute {
            get {
                return this.minuteField;
            }
            set {
                this.minuteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool minuteSpecified {
            get {
                return this.minuteFieldSpecified;
            }
            set {
                this.minuteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int second {
            get {
                return this.secondField;
            }
            set {
                this.secondField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool secondSpecified {
            get {
                return this.secondFieldSpecified;
            }
            set {
                this.secondFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axeda.com/agent/api/type")]
    public partial class Schedule {
        
        private bool periodicField;
        
        private bool periodicFieldSpecified;
        
        private TimeOfDay timeOfDayField;
        
        private Daily dailyField;
        
        private Weekly weeklyField;
        
        private Monthly monthlyField;
        
        private Yearly yearlyField;
        
        /// <remarks/>
        public bool periodic {
            get {
                return this.periodicField;
            }
            set {
                this.periodicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool periodicSpecified {
            get {
                return this.periodicFieldSpecified;
            }
            set {
                this.periodicFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public TimeOfDay TimeOfDay {
            get {
                return this.timeOfDayField;
            }
            set {
                this.timeOfDayField = value;
            }
        }
        
        /// <remarks/>
        public Daily Daily {
            get {
                return this.dailyField;
            }
            set {
                this.dailyField = value;
            }
        }
        
        /// <remarks/>
        public Weekly Weekly {
            get {
                return this.weeklyField;
            }
            set {
                this.weeklyField = value;
            }
        }
        
        /// <remarks/>
        public Monthly Monthly {
            get {
                return this.monthlyField;
            }
            set {
                this.monthlyField = value;
            }
        }
        
        /// <remarks/>
        public Yearly Yearly {
            get {
                return this.yearlyField;
            }
            set {
                this.yearlyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axeda.com/agent/api/type")]
    public partial class PackageProcessing {
        
        private PackageProcessingMode modeField;
        
        private bool modeFieldSpecified;
        
        private Schedule scheduleField;
        
        /// <remarks/>
        public PackageProcessingMode mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool modeSpecified {
            get {
                return this.modeFieldSpecified;
            }
            set {
                this.modeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public Schedule Schedule {
            get {
                return this.scheduleField;
            }
            set {
                this.scheduleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axeda.com/agent/api/type")]
    public enum PackageProcessingMode {
        
        /// <remarks/>
        fullyAutomatic,
        
        /// <remarks/>
        manualInstall,
        
        /// <remarks/>
        notifyOnly,
        
        /// <remarks/>
        fullyManual,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axeda.com/agent/api/type")]
    public partial class SMControllerConfig {
        
        private PackageProcessing packageProcessingField;
        
        /// <remarks/>
        public PackageProcessing PackageProcessing {
            get {
                return this.packageProcessingField;
            }
            set {
                this.packageProcessingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axeda.com/agent/api/type")]
    public partial class PackageStatus {
        
        private DeviceIdentification deviceField;
        
        private string packageNameField;
        
        private System.DateTime lastUpdatedField;
        
        private PackageInstruction currentInstructionField;
        
        private int currentInstructionIndexField;
        
        private int numberOfInstructionsField;
        
        private PackageStatusValues statusField;
        
        private PackageError errorField;
        
        private int transferPercentField;
        
        private long transferFileSizeField;
        
        private string packageIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DeviceIdentification device {
            get {
                return this.deviceField;
            }
            set {
                this.deviceField = value;
            }
        }
        
        /// <remarks/>
        public string packageName {
            get {
                return this.packageNameField;
            }
            set {
                this.packageNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
            }
        }
        
        /// <remarks/>
        public PackageInstruction currentInstruction {
            get {
                return this.currentInstructionField;
            }
            set {
                this.currentInstructionField = value;
            }
        }
        
        /// <remarks/>
        public int currentInstructionIndex {
            get {
                return this.currentInstructionIndexField;
            }
            set {
                this.currentInstructionIndexField = value;
            }
        }
        
        /// <remarks/>
        public int numberOfInstructions {
            get {
                return this.numberOfInstructionsField;
            }
            set {
                this.numberOfInstructionsField = value;
            }
        }
        
        /// <remarks/>
        public PackageStatusValues status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public PackageError error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        public int transferPercent {
            get {
                return this.transferPercentField;
            }
            set {
                this.transferPercentField = value;
            }
        }
        
        /// <remarks/>
        public long transferFileSize {
            get {
                return this.transferFileSizeField;
            }
            set {
                this.transferFileSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string packageId {
            get {
                return this.packageIdField;
            }
            set {
                this.packageIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axeda.com/agent/api/type")]
    public partial class DeviceIdentification {
        
        private string modelField;
        
        private string serialNumberField;
        
        /// <remarks/>
        public string model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axeda.com/agent/api/type")]
    public enum PackageInstruction {
        
        /// <remarks/>
        Uploading,
        
        /// <remarks/>
        Downloading,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axeda.com/agent/api/type")]
    public enum PackageStatusValues {
        
        /// <remarks/>
        Queued,
        
        /// <remarks/>
        Started,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Error,
        
        /// <remarks/>
        Canceled,
        
        /// <remarks/>
        Timeout,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Rolling Back")]
        RollingBack,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Rollback Error")]
        RollbackError,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Rollback Success")]
        RollbackSuccess,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dependency Failed")]
        DependencyFailed,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("File Inhibited")]
        FileInhibited,
        
        /// <remarks/>
        Undefined,
        
        /// <remarks/>
        New,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Deployment Pending")]
        DeploymentPending,
        
        /// <remarks/>
        Downloaded,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axeda.com/agent/api/type")]
    public enum PackageError {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Version Mismatch")]
        VersionMismatch,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Bad XML Format")]
        BadXMLFormat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Unknown SOAP Method")]
        UnknownSOAPMethod,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Unsupported Function")]
        UnsupportedFunction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Data Item Name Not Found")]
        DataItemNameNotFound,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Registry Name Not Found")]
        RegistryNameNotFound,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Registry File Read Error")]
        RegistryFileReadError,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Invalid Dependency Expression")]
        InvalidDependencyExpression,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("No Files Found For Upload")]
        NoFilesFoundForUpload,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Only Some File Found For Upload")]
        OnlySomeFileFoundForUpload,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Download Execution Failure")]
        DownloadExecutionFailure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("File Archive Error")]
        FileArchiveError,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("File Read Error")]
        FileReadError,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("HTTP Status Error")]
        HTTPStatusError,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Chunk Checksum Error")]
        ChunkChecksumError,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Connection Failure")]
        ConnectionFailure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SOCKS Failure")]
        SOCKSFailure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("HTTP Failure")]
        HTTPFailure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SSL Failure")]
        SSLFailure,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Package Processing Aborted")]
        PackageProcessingAborted,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("File Checksum Error")]
        FileChecksumError,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Missing Partially Uploaded File")]
        MissingPartiallyUploadedFile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Invalid Directory Name")]
        InvalidDirectoryName,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Restarting Of Agent Device Is Invalid")]
        RestartingOfAgentDeviceIsInvalid,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Custom SOAP Function Error")]
        CustomSOAPFunctionError,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("No Error")]
        NoError,
        
        /// <remarks/>
        Undefined,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axeda.com/agent/api/type")]
    public partial class File {
        
        private string nameField;
        
        private string hintField;
        
        private bool deleteFileField;
        
        private bool isPathDeviceRelativeField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string hint {
            get {
                return this.hintField;
            }
            set {
                this.hintField = value;
            }
        }
        
        /// <remarks/>
        public bool deleteFile {
            get {
                return this.deleteFileField;
            }
            set {
                this.deleteFileField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPathDeviceRelative {
            get {
                return this.isPathDeviceRelativeField;
            }
            set {
                this.isPathDeviceRelativeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axeda.com/agent/api/type")]
    public partial class Event {
        
        private string nameField;
        
        private string descriptionField;
        
        private int severityField;
        
        private System.DateTime timestampField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int severity {
            get {
                return this.severityField;
            }
            set {
                this.severityField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axeda.com/agent/api/type")]
    public partial class Alarm {
        
        private string nameField;
        
        private string descriptionField;
        
        private int severityField;
        
        private System.DateTime timestampField;
        
        private bool ackField;
        
        private bool activeField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int severity {
            get {
                return this.severityField;
            }
            set {
                this.severityField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        public bool ack {
            get {
                return this.ackField;
            }
            set {
                this.ackField = value;
            }
        }
        
        /// <remarks/>
        public bool active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axeda.com/agent/api/type")]
    public enum ShutdownMode {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Soft Restart")]
        SoftRestart,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Hard Restart")]
        HardRestart,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("System Reboot")]
        SystemReboot,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Stop Agent")]
        StopAgent,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axeda.com/agent/api/type")]
    public enum TransferCommand {
        
        /// <remarks/>
        CancelAll,
        
        /// <remarks/>
        PauseAll,
        
        /// <remarks/>
        ResumeAll,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axeda.com/agent/api/type")]
    public enum PackageState {
        
        /// <remarks/>
        Running,
        
        /// <remarks/>
        Idle,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVersionCompletedEventHandler(object sender, GetVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetDataitemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDataitemCompletedEventHandler(object sender, GetDataitemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataitemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataitemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataitemValue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataitemValue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateAlarmCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateEventCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDeviceIdsCompletedEventHandler(object sender, GetDeviceIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeviceIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeviceIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DeviceIdentification[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DeviceIdentification[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void FileUploadCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ShutdownCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void InternetConnectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void InternetDisconnectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void FileTransferControlCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPackageManagementStateCompletedEventHandler(object sender, GetPackageManagementStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPackageManagementStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPackageManagementStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PackageState Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PackageState)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPackageStatusListCompletedEventHandler(object sender, GetPackageStatusListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPackageStatusListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPackageStatusListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PackageStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PackageStatus[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPulledPackageStatusListCompletedEventHandler(object sender, GetPulledPackageStatusListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPulledPackageStatusListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPulledPackageStatusListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PackageStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PackageStatus[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetSMControllerConfigCompletedEventHandler(object sender, GetSMControllerConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSMControllerConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSMControllerConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SMControllerConfig Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SMControllerConfig)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetSMControllerConfigCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPackageInfoCompletedEventHandler(object sender, GetPackageInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPackageInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPackageInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PackageInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PackageInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CheckNewPackagesCompletedEventHandler(object sender, CheckNewPackagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckNewPackagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckNewPackagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DownloadPackagesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ExecutePackagesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPackageStatusUpdatesCompletedEventHandler(object sender, GetPackageStatusUpdatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPackageStatusUpdatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPackageStatusUpdatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PackageStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PackageStatus[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RemovePackageStatusesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591